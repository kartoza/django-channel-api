#
# Production server with UWSGI configured to run on port 8080
#
# docker-compose build
# docker-compose up -d web
#
# See accompanying Make commands for easy collectstatic etc.

# Our main nginx service - this is for testing only - normally
# You would use a standalone nginx instance running on the host!
db:
  # Note you cannot scale if you use conteiner_name
  container_name: channel-api-db
  image: kartoza/postgis:9.4-2.1
  volumes:
    - ./pg/postgres_data:/var/lib/postgresql
    - ./backups:/backups
  environment:
    - USERNAME=docker
    - PASS=docker
  restart: always

uwsgi-base:
  # Note you cannot scale if you use conteiner_name
  build: docker
  hostname: uwsgi
  environment:
    - DATABASE_NAME=gis
    - DATABASE_USERNAME=docker
    - DATABASE_PASSWORD=docker
    - DATABASE_HOST=db
    - RABBITMQ_HOST=rabbitmq
    - DJANGO_SETTINGS_MODULE=core.settings.prod_docker
    - VIRTUAL_HOST=channel-api.kartoza.com
    - VIRTUAL_PORT=8080
    # Set your locale - you need to ensure this is created in Dockerfile too...
    - LC_ALL=en_ZA.UTF-8
  volumes:
    - ../django_project:/home/web/django_project
    - ./static:/home/web/static:rw
    - ./media:/home/web/media:rw
    - ./reports:/home/web/reports
    - ./logs:/var/log/
  user: root

uwsgi-ephemeral:
  extends: uwsgi-base
  links:
    - db:db
    - redis:redis
  user: root
  restart: on-failure:5

uwsgi:
  # Note you cannot scale if you use conteiner_name
  extends: uwsgi-base
  container_name: channel-api-uwsgi
  command: python manage.py runserver 0.0.0.0:8080
  links:
    - db:db
    - redis:redis
  restart: always
  ports:
    # for django test server
    - "64205:8080"

redis:
  image: redis
  container_name: channel-redis

# This is normally the main entry point for a production server
web:
  # Note you cannot scale if you use conteiner_name
  container_name: channel-api-web
  image: nginx
  hostname: nginx
  volumes:
    - ./sites-enabled:/etc/nginx/conf.d:ro
    # I dont use volumes_from as I want to use the ro modifier
    - ./static:/home/web/static:ro
    - ./media:/home/web/media:ro
    - ./logs:/var/log/nginx
  links:
    - uwsgi:uwsgi
  ports:
    - "64200:8080"
  restart: always

# This is the entry point for a development server.
# Run with --no-deps to run attached to the services
# from produ environment if wanted
devweb:
  # Note you cannot scale if you use conteiner_name
  container_name: channel-api-dev-web
  build: docker
  dockerfile: Dockerfile-dev
  hostname: channel-api-dev-web
  environment:
    - DATABASE_NAME=gis
    - DATABASE_USERNAME=docker
    - DATABASE_PASSWORD=docker
    - DATABASE_HOST=db
    - RABBITMQ_HOST=rabbitmq
    - DJANGO_SETTINGS_MODULE=core.settings.prod_docker
    - PYTHONPATH=/home/web/django_project
    - VIRTUAL_HOST=channel-api.kartoza.com
    - VIRTUAL_PORT=8080
  volumes:
    - ../django_project:/home/web/django_project
    - ./static:/home/web/static
    - ./media:/home/web/media
    - ./reports:/home/web/reports
    - ./logs:/var/log/
  links:
    - db:db
    - redis:redis
  ports:
    # for django test server
    - "64202:8080"
    # for ssh
    - "64203:22"
