#
# Production server with UWSGI configured to run on port 8080
#
# docker-compose build
# docker-compose up -d web
#
# See accompanying Make commands for easy collectstatic etc.

# Our main nginx service - this is for testing only - normally
# You would use a standalone nginx instance running on the host!

redis:
  image: redis
  container_name: channel-redis

# This is the entry point for a development server.
# Run with --no-deps to run attached to the services
# from produ environment if wanted
devweb:
  # Note you cannot scale if you use conteiner_name
  container_name: channel-api-dev-web
  build: docker
  dockerfile: Dockerfile-dev
  hostname: channel-api-dev-web
  environment:
    - DATABASE_NAME=gis
    - DATABASE_USERNAME=docker
    - DATABASE_PASSWORD=docker
    - DATABASE_HOST=db
    - RABBITMQ_HOST=rabbitmq
    - DJANGO_SETTINGS_MODULE=core.settings.prod_docker
    - PYTHONPATH=/home/web/django_project
    - VIRTUAL_HOST=channel-api.kartoza.com
    - VIRTUAL_PORT=8080
  volumes:
    - ../django_project:/home/web/django_project
    - ./static:/home/web/static
    - ./media:/home/web/media
    - ./reports:/home/web/reports
    - ./logs:/var/log/
  links:
    - redis:redis
  ports:
    # for django test server
    - "64202:8080"
    # for ssh
    - "64203:22"
